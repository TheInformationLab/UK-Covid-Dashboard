[{"/Users/craig/Github/uk-covid-dashboard/src/index.js":"1","/Users/craig/Github/uk-covid-dashboard/src/serviceWorker.js":"2","/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/index.js":"3","/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/Dashboard.jsx":"4","/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/areas.js":"5","/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/CovidDashboards/CovidDashboards.jsx":"6","/Users/craig/Github/uk-covid-dashboard/src/components/SingleSelectMenu/SingleSelectMenu.jsx":"7","/Users/craig/Github/uk-covid-dashboard/src/components/SlideOver/SlideOver.jsx":"8","/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/CovidDashboards/CovidDashboard/CovidDashboard.jsx":"9","/Users/craig/Github/uk-covid-dashboard/src/components/SingleSelectMenu/index.js":"10","/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/CovidDashboards/CovidDashboard/SectionMenu/SectionMenu.jsx":"11","/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/index.js":"12","/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/TableauEmbed.jsx":"13","/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/tokenizeUrl.js":"14","/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/tableau-2.5.0.js":"15"},{"size":697,"mtime":1607447807485,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":1599646890957,"results":"18","hashOfConfig":"17"},{"size":64,"mtime":1599646890953,"results":"19","hashOfConfig":"17"},{"size":7870,"mtime":1607447807484,"results":"20","hashOfConfig":"17"},{"size":16981,"mtime":1602260816416,"results":"21","hashOfConfig":"17"},{"size":1013,"mtime":1607447807484,"results":"22","hashOfConfig":"17"},{"size":4778,"mtime":1607446486069,"results":"23","hashOfConfig":"17"},{"size":4634,"mtime":1607447807485,"results":"24","hashOfConfig":"17"},{"size":3819,"mtime":1607447807483,"results":"25","hashOfConfig":"17"},{"size":85,"mtime":1599646890953,"results":"26","hashOfConfig":"17"},{"size":3189,"mtime":1607447807484,"results":"27","hashOfConfig":"17"},{"size":73,"mtime":1602154336400,"results":"28","hashOfConfig":"17"},{"size":6482,"mtime":1602260816417,"results":"29","hashOfConfig":"17"},{"size":239,"mtime":1602154336402,"results":"30","hashOfConfig":"17"},{"size":462029,"mtime":1602154336401,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qvvfgc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/craig/Github/uk-covid-dashboard/src/index.js",[],"/Users/craig/Github/uk-covid-dashboard/src/serviceWorker.js",[],"/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/index.js",[],"/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/Dashboard.jsx",["64"],"import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport SingleSelectMenu from '../SingleSelectMenu/SingleSelectMenu';\nimport TextWithBubblesSVG from '../../images/TIL Text with Bubbles Inline.svg';\nimport BubblesSVG from '../../images/Bubbles Colour.svg';\nimport SlideOver from '../SlideOver/SlideOver';\nimport ReactGA from 'react-ga';\nimport areas from './areas';\nimport CovidDashboards from './CovidDashboards/CovidDashboards';\n// import PropTypes from 'prop-types';\n//import { Test } from './Dashboard.styles';\n\nconst getWidth = () => window.innerWidth \n  || document.documentElement.clientWidth \n  || document.body.clientWidth;\n\nconst getHeight = () => window.innerHeight \n|| document.documentElement.clientHeight \n|| document.body.clientWidth;\n\nconst Dashboard = (props) => {\n  const [ cookies, setCookie ] = useCookies(['vizParams', 'localAreas']);\n  const [ sideBar, setSideBar ] = useState(false);\n  const [ width, setWidth ] = useState(getWidth());\n  const [ height, setHeight ] = useState(900);\n  const [ mobile, setMobile ] = useState(width <= 1050);\n\n  const defaultParams = cookies.vizParams ? cookies.vizParams : {\n    'Embed Area Type' : 'utla',\n    'Embed Measure': 'cases'\n  };\n\n  const [ vizParams, setVizParams ] = useState(defaultParams);\n  const [ vizOptions, setVizOptions ] = useState({\n    hideTabs: true,\n    hideToolbar: true,\n    device: width <= 1050 ? 'phone' : 'desktop',\n    width: width + 'px',\n    height: height + 'px'\n  });\n  const [ showOverview, setShowOverview ] = useState(true);\n  const [ localAreas, setLocalAreas ] = useState(cookies.localAreas ? cookies.localAreas : []);\n\n  function setOptions () {\n    console.log('[Dashboard.js] setOptions');\n    setWidth(getWidth());\n    setHeight(getHeight());\n    let vizWidth = getWidth();\n    let vizHeight = 900;\n    const showMobile = vizWidth <= 1050;\n    setMobile(showMobile);\n    console.log('[Dashboard.js] Mobile', showMobile);\n    if (showMobile) {\n      vizHeight = 1800;\n    }\n    const options = {\n      hideTabs: true,\n      hideToolbar: true,\n      device: showMobile ? 'phone' : 'desktop',\n      width: vizWidth + 'px',\n      height: vizHeight + 'px'\n    }\n    console.log('[Dashboard.js] options', options);\n    setVizOptions(options);\n  };\n\n  function setParam (paramName, value) {\n    console.log('[Dashboard.js] setParam', paramName, value);\n    ReactGA.event({\n      category: 'Options',\n      action: 'Set ' + paramName,\n      label: value\n    });\n    const params = {...vizParams};\n    params[paramName] = value;\n    setVizParams(params);\n    setCookie('vizParams', JSON.stringify(params), { path: '/', expires: new Date('2021-01-01') });\n  }\n\n  function addLocalArea(area) {\n    const curAreas = [...localAreas];\n    curAreas.push(area);\n    setLocalAreas(curAreas);\n    setCookie('localAreas', JSON.stringify(curAreas), { path: '/', expires: new Date('2021-01-01') });\n  }\n\n  function handleRemoveArea(idx) {\n    const curAreas = [...localAreas];\n    curAreas.splice(idx, 1);\n    setLocalAreas(curAreas);\n    setCookie('localAreas', JSON.stringify(curAreas), { path: '/', expires: new Date('2021-01-01') });\n  }\n\n  function handleReplaceArea(idx, area) {\n    const curAreas = [...localAreas];\n    curAreas.splice(idx, 1, area);\n    setLocalAreas(curAreas);\n    setCookie('localAreas', JSON.stringify(curAreas), { path: '/', expires: new Date('2021-01-01') });\n  }\n\n  function handleInsertArea(idx) {\n    const curAreas = [...localAreas];\n    curAreas.splice(idx, 0, {\"value\": '', \"label\": \"\"});\n    setLocalAreas(curAreas);\n  }\n\n  useEffect(() => {\n    ReactGA.pageview('/', null, 'Dashboard');\n    setOptions();\n    let timeoutId = null;\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId);\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => {\n        setOptions();\n      }, 300);\n    };\n    // set resize listener\n    window.addEventListener('resize', resizeListener);\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    }\n    \n  }, []);\n\n  const areaTypes = [\n    {\n      label: \"Nation\",\n      value: \"nation\"\n    },\n    {\n      label: \"Region\",\n      value: \"region\"\n    },\n    {\n      label: \"Upper Tier Local Authority\",\n      value: \"utla\"\n    },\n    {\n      label: \"Lower Tier Local Authority\",\n      value: \"ltla\"\n    },\n  ]\n\n  const measures = [\n    {\n      label: \"Cases\",\n      value: \"cases\"\n    },\n    {\n      label: \"Cases per 100,000 population\",\n      value: \"pop\"\n    }\n  ]\n  \n  return (\n  <div className=\"min-h-screen bg-gray-100\" style={{backgroundColor: '#F4F6F5', marginBottom: -64}}>\n    <nav className=\"fixed bg-white shadow-sm\">\n    <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n      <div className=\"flex h-16\">\n        <div className=\"flex\">\n          <div className=\"flex items-center\">\n            <img className=\"block lg:hidden h-6 w-auto\" src={BubblesSVG} alt=\"Workflow logo\"/>\n            <img className=\"hidden lg:block h-10 w-auto\" src={TextWithBubblesSVG} alt=\"Workflow logo\"/>\n          </div>\n        </div>\n        <div className=\"flex justify-between w-full\">\n          <div className=\"flex\">\n            <div className=\"max-w-7xl px-4 my-auto sm:px-6 lg:px-8\">\n              <h1 className=\"text-2xl font-regular leading-tight text-gray-900\">\n                UK Coronavirus Dashboard\n              </h1>\n            </div>\n          </div>\n          <div className=\"hidden md:flex\"> \n            <SingleSelectMenu\n              label={\"Add Local Area\"}\n              options={areas}\n              width={getWidth() < 1370 ? 175 : 250}\n              value={''}\n              returnObj={(area) => addLocalArea(area)}/>  \n            <SingleSelectMenu\n              label={\"Select Measure\"}\n              value={vizParams['Embed Measure']}\n              options={measures}\n              width={getWidth() < 1370 ? 175 : 250}\n              onSelect={(value) => setParam('Embed Measure', value)}/>  \n            <SingleSelectMenu\n              label={\"View Area Type\"}\n              value={vizParams['Embed Area Type']}\n              options={areaTypes}\n              width={getWidth() < 1370 ? 175 : 250}\n              onSelect={(value) => setParam('Embed Area Type', value)}/>  \n          </div>\n          <div className=\"md:hidden pl-1 pt-1 sm:pl-3 sm:pt-3\">\n            <button type=\"button\" onMouseDown={() => setSideBar(true)} className=\"-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:bg-gray-200 transition ease-in-out duration-150\" aria-label=\"Open sidebar\">\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>     \n      </div>\n    </div>\n  </nav>\n\n  <div className=\"pb-2 pt-20\">\n    <main>\n      <div className=\"mx-auto\" >\n        <CovidDashboards\n          showOverview={showOverview}\n          areas={localAreas}\n          vizOptions={vizOptions}\n          vizParams={vizParams}\n          localAreas={areas}\n          removeArea={(idx) => handleRemoveArea(idx)} \n          addLocalArea={(area) => addLocalArea(area)}\n          replaceLocalArea={(idx, area) => handleReplaceArea(idx, area)}\n          insertArea={(idx) => handleInsertArea(idx)}\n        />\n      </div>\n    </main>\n  </div>\n  <SlideOver\n    close={() => setSideBar(false)}\n    show={sideBar}\n    vizParams={vizParams}\n    areaTypes={areaTypes}\n    measures={measures}\n    areas={areas}\n    setParam={(name, value) => setParam(name, value)}\n    addLocalArea={(area) => addLocalArea(area)}/>\n</div>\n\n)};\n\n// Dashboard.propTypes = {\n//   // bla: PropTypes.string,\n// };\n\n// Dashboard.defaultProps = {\n//   // bla: 'test',\n// };\n\nexport default Dashboard;\n",["65","66"],"/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/areas.js",[],"/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/CovidDashboards/CovidDashboards.jsx",[],"/Users/craig/Github/uk-covid-dashboard/src/components/SingleSelectMenu/SingleSelectMenu.jsx",["67"],"/Users/craig/Github/uk-covid-dashboard/src/components/SlideOver/SlideOver.jsx",[],"/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/CovidDashboards/CovidDashboard/CovidDashboard.jsx",[],"/Users/craig/Github/uk-covid-dashboard/src/components/SingleSelectMenu/index.js",[],"/Users/craig/Github/uk-covid-dashboard/src/components/Dashboard/CovidDashboards/CovidDashboard/SectionMenu/SectionMenu.jsx",[],"/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/index.js",[],"/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/TableauEmbed.jsx",[],"/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/tokenizeUrl.js",[],"/Users/craig/Github/uk-covid-dashboard/src/components/TableauEmbed/tableau-2.5.0.js",[],{"ruleId":"68","severity":1,"message":"69","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":24},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":77,"column":19,"nodeType":"78","endLine":77,"endColumn":32},"no-unused-vars","'SingleSelectMenu' is defined but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/role-has-required-aria-props","Elements with the ARIA role \"option\" must have the following attributes defined: aria-selected","JSXAttribute","no-global-assign","no-unsafe-negation"]
